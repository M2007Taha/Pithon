# Form implementation generated from reading ui file '.\14march.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

"""
@author: m2007taha
"""

from PyQt6 import QtCore, QtGui, QtWidgets
import numpy as np
import math

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1246, 721)
        MainWindow.setDockNestingEnabled(False)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("background-color:\"#191919\";")
        self.centralwidget.setObjectName("centralwidget")
        self.main_tabs = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.main_tabs.setGeometry(QtCore.QRect(10, 10, 1221, 701))
        self.main_tabs.setStyleSheet("background-color:#303051;color:#191919;")
        self.main_tabs.setObjectName("main_tabs")
        self.fibonacci = QtWidgets.QWidget()
        self.fibonacci.setObjectName("fibonacci")
        self.fibonacci_label = QtWidgets.QLabel(parent=self.fibonacci)
        self.fibonacci_label.setGeometry(QtCore.QRect(747, 227, 200, 40))
        self.fibonacci_label.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.fibonacci_label.setObjectName("fibonacci_label")
        self.fibonacci_button = QtWidgets.QPushButton(parent=self.fibonacci)
        self.fibonacci_button.setGeometry(QtCore.QRect(780, 350, 130, 61))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(15)
        font.setKerning(True)
        self.fibonacci_button.setFont(font)
        self.fibonacci_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.fibonacci_button.setStyleSheet("background-color:#ef9439;")
        self.fibonacci_button.setObjectName("fibonacci_button")
        self.fibonacci_out = QtWidgets.QTextBrowser(parent=self.fibonacci)
        self.fibonacci_out.setGeometry(QtCore.QRect(990, 30, 190, 610))
        self.fibonacci_out.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 20pt \"Bell MT\";\n"
"text-align: center;")
        self.fibonacci_out.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.fibonacci_out.setObjectName("fibonacci_out")
        self.fibonacci_fa = QtWidgets.QTextBrowser(parent=self.fibonacci)
        self.fibonacci_fa.setGeometry(QtCore.QRect(60, 40, 560, 260))
        self.fibonacci_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.fibonacci_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.fibonacci_fa.setObjectName("fibonacci_fa")
        self.fibonacci_en = QtWidgets.QTextBrowser(parent=self.fibonacci)
        self.fibonacci_en.setGeometry(QtCore.QRect(60, 320, 560, 290))
        self.fibonacci_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.fibonacci_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.fibonacci_en.setObjectName("fibonacci_en")
        self.fibonacci_input = QtWidgets.QLineEdit(parent=self.fibonacci)
        self.fibonacci_input.setGeometry(QtCore.QRect(740, 270, 221, 71))
        self.fibonacci_input.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.fibonacci_input.setObjectName("fibonacci_input")
        self.main_tabs.addTab(self.fibonacci, "")
        self.trigonometry = QtWidgets.QWidget()
        self.trigonometry.setObjectName("trigonometry")
        self.trigonometry_en = QtWidgets.QTextBrowser(parent=self.trigonometry)
        self.trigonometry_en.setGeometry(QtCore.QRect(640, 310, 560, 300))
        self.trigonometry_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.trigonometry_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.trigonometry_en.setObjectName("trigonometry_en")
        self.trigonometry_fa = QtWidgets.QTextBrowser(parent=self.trigonometry)
        self.trigonometry_fa.setGeometry(QtCore.QRect(640, 50, 560, 231))
        self.trigonometry_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.trigonometry_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.trigonometry_fa.setObjectName("trigonometry_fa")
        self.trigonometry_label = QtWidgets.QLabel(parent=self.trigonometry)
        self.trigonometry_label.setGeometry(QtCore.QRect(147, 130, 210, 40))
        self.trigonometry_label.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.trigonometry_label.setObjectName("trigonometry_label")
        self.trigonometry_button = QtWidgets.QPushButton(parent=self.trigonometry)
        self.trigonometry_button.setGeometry(QtCore.QRect(380, 180, 140, 61))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(15)
        font.setKerning(True)
        self.trigonometry_button.setFont(font)
        self.trigonometry_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.trigonometry_button.setStyleSheet("background-color:#ef9439;")
        self.trigonometry_button.setObjectName("trigonometry_button")
        self.trigonometry_out = QtWidgets.QTextBrowser(parent=self.trigonometry)
        self.trigonometry_out.setGeometry(QtCore.QRect(100, 270, 441, 271))
        self.trigonometry_out.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 20pt \"Bell MT\";\n"
"text-align: center;")
        self.trigonometry_out.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.trigonometry_out.setObjectName("trigonometry_out")
        self.trigonometry_input = QtWidgets.QLineEdit(parent=self.trigonometry)
        self.trigonometry_input.setGeometry(QtCore.QRect(140, 170, 230, 71))
        self.trigonometry_input.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.trigonometry_input.setObjectName("trigonometry_input")
        self.main_tabs.addTab(self.trigonometry, "")
        self.factorial = QtWidgets.QWidget()
        self.factorial.setObjectName("factorial")
        self.factorial_button = QtWidgets.QPushButton(parent=self.factorial)
        self.factorial_button.setGeometry(QtCore.QRect(844, 293, 130, 61))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(15)
        font.setKerning(True)
        self.factorial_button.setFont(font)
        self.factorial_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.factorial_button.setStyleSheet("background-color:#ef9439;")
        self.factorial_button.setObjectName("factorial_button")
        self.factorial_fa = QtWidgets.QTextBrowser(parent=self.factorial)
        self.factorial_fa.setGeometry(QtCore.QRect(60, 60, 501, 211))
        self.factorial_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.factorial_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.factorial_fa.setObjectName("factorial_fa")
        self.factorial_out = QtWidgets.QTextBrowser(parent=self.factorial)
        self.factorial_out.setGeometry(QtCore.QRect(690, 380, 440, 100))
        self.factorial_out.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 20pt \"Bell MT\";\n"
"text-align: center;")
        self.factorial_out.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.factorial_out.setObjectName("factorial_out")
        self.factorial_label = QtWidgets.QLabel(parent=self.factorial)
        self.factorial_label.setGeometry(QtCore.QRect(807, 170, 200, 40))
        self.factorial_label.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.factorial_label.setObjectName("factorial_label")
        self.factorial_en = QtWidgets.QTextBrowser(parent=self.factorial)
        self.factorial_en.setGeometry(QtCore.QRect(60, 300, 501, 271))
        self.factorial_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.factorial_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.factorial_en.setObjectName("factorial_en")
        self.factorial_input = QtWidgets.QLineEdit(parent=self.factorial)
        self.factorial_input.setGeometry(QtCore.QRect(800, 210, 220, 71))
        self.factorial_input.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.factorial_input.setObjectName("factorial_input")
        self.main_tabs.addTab(self.factorial, "")
        self.exponentiation = QtWidgets.QWidget()
        self.exponentiation.setObjectName("exponentiation")
        self.exponentiation_en = QtWidgets.QTextBrowser(parent=self.exponentiation)
        self.exponentiation_en.setGeometry(QtCore.QRect(630, 310, 540, 280))
        self.exponentiation_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.exponentiation_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.exponentiation_en.setObjectName("exponentiation_en")
        self.exponentiation_fa = QtWidgets.QTextBrowser(parent=self.exponentiation)
        self.exponentiation_fa.setGeometry(QtCore.QRect(630, 60, 540, 220))
        self.exponentiation_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.exponentiation_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.exponentiation_fa.setObjectName("exponentiation_fa")
        self.exponentiation_base_input = QtWidgets.QLineEdit(parent=self.exponentiation)
        self.exponentiation_base_input.setGeometry(QtCore.QRect(160, 250, 200, 90))
        self.exponentiation_base_input.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.exponentiation_base_input.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.exponentiation_base_input.setObjectName("exponentiation_base_input")
        self.exponentiation_exponent_input = QtWidgets.QLineEdit(parent=self.exponentiation)
        self.exponentiation_exponent_input.setGeometry(QtCore.QRect(160, 140, 200, 90))
        self.exponentiation_exponent_input.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.exponentiation_exponent_input.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.exponentiation_exponent_input.setObjectName("exponentiation_exponent_input")
        self.exponentiation_button = QtWidgets.QPushButton(parent=self.exponentiation)
        self.exponentiation_button.setGeometry(QtCore.QRect(400, 200, 160, 80))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(15)
        font.setKerning(True)
        self.exponentiation_button.setFont(font)
        self.exponentiation_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.exponentiation_button.setStyleSheet("background-color:#ef9439;")
        self.exponentiation_button.setObjectName("exponentiation_button")
        self.exponentiation_label_base = QtWidgets.QLabel(parent=self.exponentiation)
        self.exponentiation_label_base.setGeometry(QtCore.QRect(90, 270, 60, 40))
        self.exponentiation_label_base.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.exponentiation_label_base.setObjectName("exponentiation_label_base")
        self.exponentiation_label_exponent = QtWidgets.QLabel(parent=self.exponentiation)
        self.exponentiation_label_exponent.setGeometry(QtCore.QRect(90, 160, 60, 40))
        self.exponentiation_label_exponent.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.exponentiation_label_exponent.setObjectName("exponentiation_label_exponent")
        self.exponentiation_out = QtWidgets.QTextBrowser(parent=self.exponentiation)
        self.exponentiation_out.setGeometry(QtCore.QRect(110, 360, 360, 90))
        self.exponentiation_out.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 20pt \"Bell MT\";\n"
"text-align: center;")
        self.exponentiation_out.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.exponentiation_out.setObjectName("exponentiation_out")
        self.main_tabs.addTab(self.exponentiation, "")
        self.absolute = QtWidgets.QWidget()
        self.absolute.setObjectName("absolute")
        self.absolute_fa = QtWidgets.QTextBrowser(parent=self.absolute)
        self.absolute_fa.setGeometry(QtCore.QRect(50, 50, 560, 240))
        self.absolute_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.absolute_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.absolute_fa.setObjectName("absolute_fa")
        self.absolute_en = QtWidgets.QTextBrowser(parent=self.absolute)
        self.absolute_en.setGeometry(QtCore.QRect(50, 300, 560, 280))
        self.absolute_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.absolute_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.absolute_en.setObjectName("absolute_en")
        self.absolute_button = QtWidgets.QPushButton(parent=self.absolute)
        self.absolute_button.setGeometry(QtCore.QRect(855, 260, 160, 80))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(15)
        font.setKerning(True)
        self.absolute_button.setFont(font)
        self.absolute_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.absolute_button.setStyleSheet("background-color:#ef9439;")
        self.absolute_button.setObjectName("absolute_button")
        self.absolute_out = QtWidgets.QTextBrowser(parent=self.absolute)
        self.absolute_out.setGeometry(QtCore.QRect(740, 359, 390, 100))
        self.absolute_out.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 20pt \"Bell MT\";\n"
"text-align: center;")
        self.absolute_out.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.absolute_out.setObjectName("absolute_out")
        self.absolute_input = QtWidgets.QLineEdit(parent=self.absolute)
        self.absolute_input.setGeometry(QtCore.QRect(835, 150, 200, 90))
        self.absolute_input.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.absolute_input.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.absolute_input.setObjectName("absolute_input")
        self.absolute_label = QtWidgets.QLabel(parent=self.absolute)
        self.absolute_label.setGeometry(QtCore.QRect(827, 110, 200, 40))
        self.absolute_label.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.absolute_label.setObjectName("absolute_label")
        self.main_tabs.addTab(self.absolute, "")
        self.gcd_lcm = QtWidgets.QWidget()
        self.gcd_lcm.setObjectName("gcd_lcm")
        self.gcm_lcm_box = QtWidgets.QToolBox(parent=self.gcd_lcm)
        self.gcm_lcm_box.setGeometry(QtCore.QRect(600, 30, 590, 611))
        self.gcm_lcm_box.setStyleSheet("color:#fff;\n"
"font: 75 8pt \"B Titr\";")
        self.gcm_lcm_box.setObjectName("gcm_lcm_box")
        self.gcm_box = QtWidgets.QWidget()
        self.gcm_box.setGeometry(QtCore.QRect(0, 0, 590, 541))
        self.gcm_box.setObjectName("gcm_box")
        self.gcm_en = QtWidgets.QTextBrowser(parent=self.gcm_box)
        self.gcm_en.setGeometry(QtCore.QRect(10, 280, 570, 260))
        self.gcm_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.gcm_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.gcm_en.setObjectName("gcm_en")
        self.gcm_fa = QtWidgets.QTextBrowser(parent=self.gcm_box)
        self.gcm_fa.setGeometry(QtCore.QRect(10, 10, 570, 260))
        self.gcm_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.gcm_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.gcm_fa.setObjectName("gcm_fa")
        self.gcm_lcm_box.addItem(self.gcm_box, "")
        self.lcm_box = QtWidgets.QWidget()
        self.lcm_box.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.lcm_box.setObjectName("lcm_box")
        self.lcm_en = QtWidgets.QTextBrowser(parent=self.lcm_box)
        self.lcm_en.setGeometry(QtCore.QRect(10, 270, 570, 240))
        self.lcm_en.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 22pt \"NPIParisa\";\n"
"\n"
"")
        self.lcm_en.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.lcm_en.setObjectName("lcm_en")
        self.lcm_fa = QtWidgets.QTextBrowser(parent=self.lcm_box)
        self.lcm_fa.setGeometry(QtCore.QRect(10, 10, 570, 230))
        self.lcm_fa.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 75 8pt \"0 Titr Bold\";")
        self.lcm_fa.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.lcm_fa.setObjectName("lcm_fa")
        self.gcm_lcm_box.addItem(self.lcm_box, "")
        self.gcd_lcm_button = QtWidgets.QPushButton(parent=self.gcd_lcm)
        self.gcd_lcm_button.setGeometry(QtCore.QRect(225, 281, 160, 80))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(15)
        font.setKerning(True)
        self.gcd_lcm_button.setFont(font)
        self.gcd_lcm_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.gcd_lcm_button.setStyleSheet("background-color:#ef9439;")
        self.gcd_lcm_button.setObjectName("gcd_lcm_button")
        self.gcd_lcm_input1 = QtWidgets.QLineEdit(parent=self.gcd_lcm)
        self.gcd_lcm_input1.setGeometry(QtCore.QRect(80, 171, 200, 90))
        self.gcd_lcm_input1.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.gcd_lcm_input1.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.gcd_lcm_input1.setObjectName("gcd_lcm_input1")
        self.gcd_lcm_out = QtWidgets.QTextBrowser(parent=self.gcd_lcm)
        self.gcd_lcm_out.setGeometry(QtCore.QRect(110, 380, 390, 120))
        self.gcd_lcm_out.setStyleSheet("background-color:#ef9439;\n"
"color:#23301f;\n"
"font: 20pt \"Bell MT\";\n"
"text-align: center;")
        self.gcd_lcm_out.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.gcd_lcm_out.setObjectName("gcd_lcm_out")
        self.gcd_lcm_label = QtWidgets.QLabel(parent=self.gcd_lcm)
        self.gcd_lcm_label.setGeometry(QtCore.QRect(200, 130, 200, 40))
        self.gcd_lcm_label.setStyleSheet("font: 75 12pt \"B Titr\";")
        self.gcd_lcm_label.setObjectName("gcd_lcm_label")
        self.gcd_lcm_input2 = QtWidgets.QLineEdit(parent=self.gcd_lcm)
        self.gcd_lcm_input2.setGeometry(QtCore.QRect(310, 170, 200, 90))
        self.gcd_lcm_input2.setStyleSheet("font: 20pt \"Bell MT\";\n"
"background-color:#ef9439;\n"
"color:#23301f;\n"
"text-align: center;")
        self.gcd_lcm_input2.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.gcd_lcm_input2.setObjectName("gcd_lcm_input2")
        self.main_tabs.addTab(self.gcd_lcm, "")
        self.about = QtWidgets.QWidget()
        self.about.setObjectName("about")
        self.about_text = QtWidgets.QTextBrowser(parent=self.about)
        self.about_text.setGeometry(QtCore.QRect(-7, 0, 1221, 681))
        self.about_text.setObjectName("about_text")
        self.main_tabs.addTab(self.about, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.main_tabs.setCurrentIndex(0)
        self.gcm_lcm_box.setCurrentIndex(0)
        self.factorial_button.clicked.connect(self.clear)
        self.factorial_button.clicked.connect(self.factorial_func)
        self.trigonometry_button.clicked.connect(self.clear)
        self.trigonometry_button.clicked.connect(self.trigonometry_func)
        self.fibonacci_button.clicked.connect(self.clear)
        self.fibonacci_button.clicked.connect(self.fibonacci_func)
        self.exponentiation_button.clicked.connect(self.clear)
        self.exponentiation_button.clicked.connect(self.exponentiation_func)
        self.absolute_button.clicked.connect(self.clear)
        self.absolute_button.clicked.connect(self.absolute_func)
        self.gcd_lcm_button.clicked.connect(self.clear)
        self.gcd_lcm_button.clicked.connect(self.gcd_lcm_func)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Digital transformation in mathematics"))
        self.fibonacci_label.setText(_translate("MainWindow", "   تعداد مورد نظر را وارد کنید"))
        self.fibonacci_button.setText(_translate("MainWindow", "نمایش"))
        self.fibonacci_out.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Bell MT\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'B Roya\'; font-size:11pt; font-weight:72;\"><br /></p></body></html>"))
        self.fibonacci_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"center\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Bad\'; font-size:16pt; font-weight:600;\">فیبوناچی</span></p>\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:16pt;\">این اعداد به نام لئوناردو فیبوناچی، ریاضی‌دان ایتالیاییِ قرن سیزدهم میلادی، نام‌گذاری شده‌است.</span></p>\n"
"<p dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:16pt;\">در واقع، فیبوناچی در سال ۱۲۰۲ به مسئله عجیبی علاقه‌مند شد. او می‌خواست بداند اگر یک جفت خرگوش نر و ماده داشته باشد و رفتاری برای زاد و ولد آن‌ها تعریف کند در نهایت نتیجه چگونه خواهد شد.</span></p></body></html>"))
        self.fibonacci_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:600;\">Fibonacci</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:72;\">These numbers are named after Leonardo Fibonacci, a 13th century Italian mathematician.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:72;\">In fact, Fibonacci became interested in a strange problem in 1202. He wanted to know what the result would be if he had a pair of male and female rabbits and defined a behavior for their reproduction.</span></p></body></html>"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.fibonacci), _translate("MainWindow", "Fibonacci"))
        self.trigonometry_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:600;\">Trigonometry</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt;\">trigonometry, the branch of mathematics concerned with specific functions of angles and their application to calculations. There are six functions of an angle commonly used in trigonometry. Their names and abbreviations are sine (sin), cosine (cos), tangent (tan) and cotangent (cot).</span></p></body></html>"))
        self.trigonometry_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"center\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Bad\'; font-size:16pt; font-weight:600;\">مثلثات</span></p>\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:16pt;\">مثلثات، شاخه ای از ریاضیات که به توابع خاص زوایا و کاربرد آنها در محاسبات مربوط می شود. شش تابع از یک زاویه وجود دارد که معمولاً در مثلثات استفاده می شود. نام و مخفف آنها سینوس (sin)، کسینوس (cos)، مماس (tan) و کوتانژانت (cot) است.</span></p></body></html>"))
        self.trigonometry_label.setText(_translate("MainWindow", "   زاویه مورد نظر را وارد کنید"))
        self.trigonometry_button.setText(_translate("MainWindow", "محاسبه"))
        self.trigonometry_out.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Bell MT\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt; font-weight:72;\">.</span></p></body></html>"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.trigonometry), _translate("MainWindow", "Trigonometry"))
        self.factorial_button.setText(_translate("MainWindow", "محاسبه"))
        self.factorial_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"center\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Bad\'; font-size:16pt; font-weight:600;\">فاکتوریل</span></p>\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:16pt;\">فاکتوریل یک عملیات ریاضی است که شما اینطور می نویسید: n! . این نشان دهنده ضرب همه اعداد بین 1 و n است. پس اگر قرار بود 3! داشته باشید برای مثال، شما باید 1×2×3 را محاسبه کنید.</span></p></body></html>"))
        self.factorial_out.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Bell MT\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt; font-weight:600;\">.</span></p></body></html>"))
        self.factorial_label.setText(_translate("MainWindow", "   عدد مورد نظر را وارد کنید"))
        self.factorial_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:600;\">Factorial</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:72;\">A factorial is a mathematical operation that you write like this: n! . It represents the multiplication of all numbers between 1 and n. So if you were to have 3! , for example, you\'d compute 3 x 2 x 1</span></p></body></html>"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.factorial), _translate("MainWindow", "Factorial"))
        self.exponentiation_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:600;\">Exponentiation</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:72;\">In mathematics, exponentiation is an operation involving two numbers: the base and the exponent or power. Exponentiation is written as bn, where b is the base and n is the power. When n is a positive integer, exponentiation corresponds to repeated multiplication of the base: that is, bn is the product of multiplying n bases.</span></p></body></html>"))
        self.exponentiation_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"center\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Bad\'; font-size:16pt; font-weight:600;\">توان</span></p>\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:16pt;\">توان یک عملیات ریاضی است که به صورت b^n نوشته می‌شود. این عملیات به صورت b به توان n خوانده می‌شود و در آن b به عنوان پایه و n به عنوان توان شناخته می‌شود. هنگامی که n یک عدد صحیح مثبت باشد این عملیات معادل n بار ضرب b در خودش است.</span></p></body></html>"))
        self.exponentiation_button.setText(_translate("MainWindow", "محاسبه"))
        self.exponentiation_label_base.setText(_translate("MainWindow", "  : پایه"))
        self.exponentiation_label_exponent.setText(_translate("MainWindow", "  : توان"))
        self.exponentiation_out.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Bell MT\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt; font-weight:600;\">.</span></p></body></html>"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.exponentiation), _translate("MainWindow", "Exponentiation"))
        self.absolute_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"center\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Bad\'; font-size:16pt; font-weight:600;\">قدرمطلق</span></p>\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:16pt;\">در ریاضیات، قدر مطلق (به انگلیسی: Absolute value ) یا مقدار مطلقِ یک عددی حقیقی x، که با علامت |x| نشان داده می‌شود، مقدارِ x به صورت غیر منفی و بدون توجه به علامت آن است. پس قدر مطلق یک عدد همواره نامنفی است؛ یعنی یا مثبت است یا صفر. به بیان دیگر، قدر مطلقِ یک عدد برابر است با فاصله آن عدد تا صفر.</span></p></body></html>"))
        self.absolute_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:600;\">Absolute</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:16pt; font-weight:72;\">In mathematics, the absolute value or the absolute value of a real number x, denoted by |x| It is shown that the value of x is non-negative and regardless of its sign. So the absolute value of a number is always non-negative. That is, it is either positive or zero. In other words, the absolute value of a number is equal to the distance of that number to zero.</span></p></body></html>"))
        self.absolute_button.setText(_translate("MainWindow", "محاسبه"))
        self.absolute_out.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Bell MT\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt; font-weight:600;\">.</span></p></body></html>"))
        self.absolute_label.setText(_translate("MainWindow", "   عدد مورد نظر را وارد کنید"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.absolute), _translate("MainWindow", "Absolute"))
        self.gcm_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:18pt; font-weight:72;\">The greatest common divisor (GCD) of two or more numbers is the greatest common factor number that divides them, exactly. It is also called the highest common factor (HCF). For example, the greatest common factor of 15 and 10 is 5, since both the numbers can be divided by 5.</span></p></body></html>"))
        self.gcm_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt;\">بزرگترین مقسوم علیه مشترک (ب.م.م) دو یا چند عدد، بزرگترین عدد عامل مشترکی است که دقیقاً آنها را تقسیم می کند. به آن بالاترین فاکتور رایج (HCF) نیز می گویند. به عنوان مثال، بزرگترین عامل مشترک 15 و 10 5 است، زیرا هر دو عدد را می توان بر 5 تقسیم کرد.</span></p></body></html>"))
        self.gcm_lcm_box.setItemText(self.gcm_lcm_box.indexOf(self.gcm_box), _translate("MainWindow", "GCD - ب‌م‌م"))
        self.lcm_en.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'NPIParisa\'; font-size:22pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'MS Shell Dlg 2\'; font-size:18pt; font-weight:72;\">In arithmetic and number theory, the least common multiple, lowest common multiple, or smallest common multiple of two integers a and b, usually denoted by lcm, is the smallest positive integer that is divisible by both a and b.</span></p></body></html>"))
        self.lcm_fa.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'0 Titr Bold\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p align=\"right\" dir=\'rtl\' style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt;\">در تئوری حساب و اعداد، کوچکترین مضرب مشترک، کمترین مضرب مشترک یا کوچکترین مضرب مشترک دو عدد صحیح a و b که معمولاً با ک.م.م نشان داده می شود، کوچکترین عدد صحیح مثبت است.</span></p></body></html>"))
        self.gcm_lcm_box.setItemText(self.gcm_lcm_box.indexOf(self.lcm_box), _translate("MainWindow", "LCM -  ک‌م‌م"))
        self.gcd_lcm_button.setText(_translate("MainWindow", "محاسبه"))
        self.gcd_lcm_out.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Bell MT\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'B Roya\'; font-size:18pt; font-weight:600;\">.</span></p></body></html>"))
        self.gcd_lcm_label.setText(_translate("MainWindow", "   اعداد مورد نظر را وارد کنید"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.gcd_lcm), _translate("MainWindow", "GCD - LCM"))
        self.about_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.85455pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:7.85455pt;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#ff4500;\">طاها مصطفوی</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#ff4500;\">Taha Mostafavi</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#ff4500;\">tahabehfar@gmail.com</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#ff4500;\">github.com/</span><span style=\" font-size:12pt; font-weight:600; color:#ff4500;\">M2007Taha</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; color:#ff4500;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#ff4500;\">latest update :‌ Tue Feb 26 2024</span></p></body></html>"))
        self.main_tabs.setTabText(self.main_tabs.indexOf(self.about), _translate("MainWindow", "about"))
    
    #functions
    def fibonacci_func(self):
        try:
            print("fibonacci function run")
            counter = int(self.fibonacci_input.text())
            a, b = 0, 1
            for _ in range(counter):
                self.fibonacci_out.append(f"{a}\n")
                print(a, end=" ")
                a, b = b, a+b
            print()
        except:
            print('Error')
    def factorial_func(self):
        try:
            print("factorial function run")
            pin = self.factorial_input.text()
            if '-' in pin:
                number = int(pin.replace('-',''))
                tmp = '-'
            else:
                number = int(pin)
                tmp = ''
            print(f"user input : {number}")
            factor = number * (number-1)
            for i in range(number-2,0,-1):
                factor *= i
            self.factorial_out.append(f'{tmp}{factor}')
            print(f'out put : {tmp}{factor}')
        except:
            print('Error')
    def trigonometry_func(self):
        try:
            print("trigonometry function run")
            Input = self.trigonometry_input.text()
            angle = math.radians(int(Input))
            print(f"user input : {angle}")
            sin = round(math.sin(angle),5)
            cos = round(math.cos(angle),5)
            tan = round(math.tan(angle),5)
            if tan != 0 :
                cot = round((1 / tan),5)
            else: 
                cot = 'Undefinde - تعریف نشده'
            result = f"sin{Input}∘ : {sin}\ncos{Input}∘ : {cos}\ntan{Input}∘ : {tan}\ncot{Input}∘ : {cot}"
            self.trigonometry_out.append(f'{result}')
            print(f'out put :\n{result}')
        except:
            print('Error')
    def exponentiation_func(self):
        try:
            print("exponentiation function run")
            exponent = float(self.exponentiation_exponent_input.text())
            base = float(self.exponentiation_base_input.text())
            print(f"user input:\nexponent : {exponent}\nbase : {base}")
            result = pow(base,exponent)
            self.exponentiation_out.append(f"{result}")
            print(f"out put : {result}")
        except:
            print('Error')
    def absolute_func(self):
        try:
            print("absolute function run")
            number = float(self.absolute_input.text())
            print(f"user input : {number}")
            result = abs(number)
            self.absolute_out.append(f'{result}')
            print(f"out put : {result}")
        except:
            print('Error')
    def gcd_lcm_func(self):
        try:
            print("gcd_lcm function run")
            number1 = int(self.gcd_lcm_input1.text())
            number2 = int(self.gcd_lcm_input2.text())
            print(f"user input : {number1},{number2}")
            gcd = math.gcd(number1,number2)
            lcm = math.lcm(number1,number2)
            result = f"GCD({number1},{number2}) = {gcd}\nLCM({number1},{number2}) = {lcm}"
            self.gcd_lcm_out.append(result)
            print(f"out put : {result}")
        except:
            print('Error')
    def clear(self):
        print('clear function run')
        self.trigonometry_out.clear()
        self.factorial_out.clear()
        self.fibonacci_out.clear()
        self.exponentiation_out.clear()
        self.absolute_out.clear()
        self.gcd_lcm_out.clear()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
